{"version":3,"file":"static/js/496.db004827.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { useContacts } from 'hooks';\n\nimport { Box, Typography, TextField, Button } from '@mui/material';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const { contacts } = useContacts();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const newContact = { name: form.name.value, number: form.number.value };\n    const findContact = contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (findContact) {\n      form.reset();\n      return Notify.failure(`${newContact.name} is already in contacts.`, {\n        position: 'center-top',\n        width: '300px',\n        fontSize: '14px',\n        failure: {\n          background: '#883f2d',\n        },\n      });\n    }\n\n    dispatch(addContact(newContact));\n    form.reset();\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '400px',\n      }}\n      autoComplete=\"off\"\n    >\n      <Typography component=\"h4\" variant=\"1\">\n        Add contact\n      </Typography>\n      <TextField\n        type=\"text\"\n        name=\"name\"\n        label=\"Name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        margin=\"normal\"\n        fullWidth\n        required\n        autoComplete=\"false\"\n        sx={{ marginTop: 4 }}\n      />\n      <TextField\n        type=\"tel\"\n        name=\"number\"\n        label=\"Number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        margin=\"normal\"\n        fullWidth\n        required\n        autoComplete=\"false\"\n      />\n      <Button\n        type=\"submit\"\n        variant=\"outlined\"\n        sx={{\n          marginTop: 4,\n        }}\n      >\n        Add contact\n      </Button>\n    </Box>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch } from 'react-redux';\n\nimport { setFilter } from 'redux/filter/filterSlice';\n\nimport { Container, Typography, TextField } from '@mui/material';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    const form = e.currentTarget.value;\n    dispatch(setFilter(form));\n  };\n\n  return (\n    <Container\n      component=\"div\"\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <Typography component=\"h4\" variant=\"1\">\n        Find contact by name\n      </Typography>\n      <TextField\n        onChange={handleSubmit}\n        type=\"text\"\n        name=\"filter\"\n        label=\"Enter contact\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        margin=\"normal\"\n        fullWidth\n        required\n        sx={{ marginTop: 4, width: '400px' }}\n      />\n    </Container>\n  );\n};\n\nexport default Filter;\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { ListItem, Typography, Button, Icon } from '@mui/material';\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <ListItem\n      sx={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        borderBottom: 1,\n        borderColor: 'divider',\n        pt: '16.5px',\n        pb: '16.5px',\n        pr: '14px',\n        pl: '14px',\n      }}\n    >\n      <Typography component=\"h4\" variant=\"1\">\n        {name}: {number}\n      </Typography>\n      <Button type=\"button\" onClick={handleDelete}>\n        <Icon sx={{ display: 'flex', ml: '30px' }}>\n          <PersonRemoveIcon sx={{ color: '#883f2d' }} />\n        </Icon>\n      </Button>\n    </ListItem>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { selectVisibleContacts } from 'redux/contacts/selectors';\n\nimport { useContacts } from 'hooks';\n\nimport ContactItem from 'components/ContactItem';\n\nimport { List, Typography } from '@mui/material';\n\nconst ContactList = () => {\n  const { contacts, filter } = useContacts();\n  const visibleContacts = selectVisibleContacts(contacts, filter);\n\n  if (!contacts?.length) {\n    return (\n      <Typography\n        component=\"h4\"\n        variant=\"1\"\n        sx={{ marginTop: 4, color: '#883f2d' }}\n      >\n        You can add contacts\n      </Typography>\n    );\n  }\n\n  if (!visibleContacts?.length) {\n    return (\n      <Typography\n        component=\"h4\"\n        variant=\"1\"\n        sx={{ marginTop: 4, color: '#883f2d' }}\n      >\n        Not found...\n      </Typography>\n    );\n  }\n\n  return (\n    <List\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '400px',\n      }}\n    >\n      {visibleContacts.map(({ id, name, number }) => (\n        <ContactItem key={id} id={id} name={name} number={number} />\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useContacts } from 'hooks';\n\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport Loader from 'components/Loader';\n\nimport { Container, Typography, Avatar } from '@mui/material';\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container\n      component=\"section\"\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      {isLoading && !error && <Loader />}\n      <Avatar sx={{ marginTop: 4, bgcolor: '#883f2d' }}>\n        <PersonAddAltIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h6\">\n        Phonebook\n      </Typography>\n      <ContactForm />\n      <Avatar sx={{ marginTop: 4, bgcolor: '#883f2d' }}>\n        <PersonSearchIcon />\n      </Avatar>\n      <Typography\n        component=\"h2\"\n        variant=\"h6\"\n        sx={{ display: 'flex', justifyContent: 'center' }}\n      >\n        Contacts\n      </Typography>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["dispatch","useDispatch","contacts","useContacts","Box","component","onSubmit","e","preventDefault","form","currentTarget","newContact","name","value","number","find","contact","toLowerCase","reset","Notify","position","width","fontSize","failure","background","addContact","sx","display","flexDirection","alignItems","autoComplete","Typography","variant","TextField","type","label","pattern","title","margin","fullWidth","required","marginTop","Button","Container","onChange","setFilter","id","ListItem","justifyContent","borderBottom","borderColor","pt","pb","pr","pl","onClick","deleteContact","Icon","ml","PersonRemove","color","filter","visibleContacts","selectVisibleContacts","length","List","map","isLoading","error","useEffect","fetchContacts","Helmet","Loader","Avatar","bgcolor","PersonAddAlt","PersonSearch"],"sourceRoot":""}